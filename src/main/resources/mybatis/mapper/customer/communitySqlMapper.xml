<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fiveguys.customer.mapper.CommunitySqlMapper">

    <insert id="insertCommunityWrite">
        insert into fc_community(
            customerNumber, communityTitle, communityContent, communityVisitCount
        ) values(
             #{customerNumber} , #{communityTitle}, #{communityContent} , 0
        )
    </insert>

<!--    게시글 전체리스트 역순으로 정렬-->
    <select id="selectCommunityList" resultType="CommunityDto">
        select
             communityNumber,
             customerNumber,
             communityTitle,
             communityContent,
             communityVisitCount,

        CASE
            WHEN FLOOR(TIMESTAMPDIFF(MONTH, communityCreatedAt, NOW()) / 12) >= 1 THEN CONCAT(FLOOR(TIMESTAMPDIFF(MONTH, communityCreatedAt, NOW()) / 12), '년전')
            WHEN TIMESTAMPDIFF(MONTH, communityCreatedAt, NOW()) >= 1 THEN CONCAT(TIMESTAMPDIFF(MONTH, communityCreatedAt, NOW()), '달전')
            WHEN DATEDIFF(CURRENT_DATE, communityCreatedAt) >= 1 THEN CONCAT(DATEDIFF(CURRENT_DATE, communityCreatedAt), '일전')
            WHEN TIMESTAMPDIFF(HOUR, communityCreatedAt, NOW()) >= 1 THEN CONCAT(TIMESTAMPDIFF(HOUR, communityCreatedAt, NOW()), '시간전')
            ELSE CONCAT(TIMESTAMPDIFF(MINUTE, communityCreatedAt, NOW()), '분전')
        end as communityCreatedAt

        from fc_community
        order by communityNumber desc
    </select>

<!--    CustomerDto에서 정보찾기-->
    <select id="selectCustomerNumber" resultType="CustomerDto">
        select * from fc_customer where customerNumber = #{customerNumber}
    </select>


    <select id="selectCommunityNumber" resultType="CommunityDto">
        select * from fc_community where communityNumber = #{communityNumber}
    </select>

<!--    조회수 증가-->
    <update id="updateVisitCount">
        update fc_community
        set communityVisitCount = communityVisitCount + 1
        where communityNumber = #{communityNumber}
    </update>

<!--    게시글 삭제-->
    <delete id="deleteCommunityPage">
        delete from fc_community where communityNumber = #{communityNumber}
    </delete>

<!--    게시글 수정-->
    <update id="updateCommunityPage">
        update fc_community
        set
            communityTitle = #{communityTitle},
            communityContent = #{communityContent}
        where communityNumber = #{communityNumber}
    </update>

<!--    댓글-->
    <insert id="insertCommunityComment">
        insert into fc_communityComment(
            customerNumber, communityNumber, commentText
        ) values(
            #{customerNumber}, #{communityNumber}, #{commentText}
        )
    </insert>

<!--    댓글 리스트-->
    <select id="selectCommunityCommentList" resultType="communityCommentDto">
        select
            commentNumber,
            customerNumber,
            communityNumber,
            commentText,
            commentCreatedAt,
        CASE
            WHEN FLOOR(TIMESTAMPDIFF(MONTH, commentCreatedAt, NOW()) / 12) >= 1 THEN CONCAT(FLOOR(TIMESTAMPDIFF(MONTH, commentCreatedAt, NOW()) / 12), '년전')
            WHEN TIMESTAMPDIFF(MONTH, commentCreatedAt, NOW()) >= 1 THEN CONCAT(TIMESTAMPDIFF(MONTH, commentCreatedAt, NOW()), '달전')
            WHEN DATEDIFF(CURRENT_DATE, commentCreatedAt) >= 1 THEN CONCAT(DATEDIFF(CURRENT_DATE, commentCreatedAt), '일전')
            WHEN TIMESTAMPDIFF(HOUR, commentCreatedAt, NOW()) >= 1 THEN CONCAT(TIMESTAMPDIFF(HOUR, commentCreatedAt, NOW()), '시간전')
            ELSE CONCAT(TIMESTAMPDIFF(MINUTE, commentCreatedAt, NOW()), '분전')
            end as commentCreatedAt

        from fc_communityComment
        where communityNumber = #{communityNumber}
        order by commentNumber desc
    </select>

<!--    좋아요-->
    <insert id="insertCommunityLike">
        insert into fc_communityLike(
            communityNumber, customerNumber
        ) values (
            #{communityNumber}, #{customerNumber}
        )
    </insert>

<!--    좋아요 삭제-->
    <delete id="deleteLikeNumber">
        delete from fc_communityLike
        where likeNumber = #{likeNumber}
    </delete>

    <select id="selectCommunityLike" resultType="CommunityLikeDto">
        select * from fc_communityLike
        where communityNumber = #{communityNumber}
        and customerNumber = #{customerNumber}
    </select>

    <!--    좋아요 카운트-->
    <select id="selectCountCommunityLike" resultType="int">
        select count(*)
        from fc_communityLike
        where communityNumber = #{communityNumber}
    </select>

<!--    댓글카운트-->
    <select id="selectCountCommentNumber" resultType="int">
        select count(*)
        from fc_communityComment
        where communityNumber = #{communityNumber}
    </select>








</mapper>